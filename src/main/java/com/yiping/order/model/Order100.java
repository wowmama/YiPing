package com.yiping.order.model;

// Generated 2016/1/19 �U�� 10:34:22 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.yiping.customer.model.Customer100;
import com.yiping.stock.model.Stock100;
import com.yiping.sys.model.SysStatus100;

/**
 * Order100 generated by hbm2java
 */
@Entity
@Table(name = "order100", catalog = "yiping")
public class Order100 implements java.io.Serializable {

	private int order100Id;
	private Customer100 customer100;
	private SysStatus100 orderStatus;
	private Date pickupTime;
	private Date createTime;
	private Integer deposit;
	private Set<Stock100> stock100s = new HashSet<Stock100>(0);
	private Set<Order101> order101s = new HashSet<Order101>(0);

	public Order100() {
	}

	public Order100(Customer100 customer100, SysStatus100 orderStatus) {
		this.customer100 = customer100;
		this.orderStatus = orderStatus;
	}

	public Order100(Customer100 customer100, SysStatus100 orderStatus,
			Date pickupTime, Date createTime, Set<Stock100> stock100s,
			Set<Order101> order101s) {
		this.customer100 = customer100;
		this.orderStatus = orderStatus;
		this.pickupTime = pickupTime;
		this.createTime = createTime;
		this.stock100s = stock100s;
		this.order101s = order101s;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ORDER100_ID", unique = true, nullable = false)
	public int getOrder100Id() {
		return this.order100Id;
	}

	public void setOrder100Id(int order100Id) {
		this.order100Id = order100Id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CUSTOMER100_ID", nullable = false)
	public Customer100 getCustomer100() {
		return this.customer100;
	}

	public void setCustomer100(Customer100 customer100) {
		this.customer100 = customer100;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ORDER_STATUS", nullable = false)
	public SysStatus100 getOrderStatus() {
		return this.orderStatus;
	}

	public void setOrderStatus(SysStatus100 sysStatus100) {
		this.orderStatus = sysStatus100;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PICKUP_TIME", length = 10)
	public Date getPickupTime() {
		return this.pickupTime;
	}

	public void setPickupTime(Date pickupTime) {
		this.pickupTime = pickupTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", length = 10)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}
	
	@Column(name = "DEPOSIT", nullable = false)
	public Integer getDeposit() {
		return deposit;
	}

	public void setDeposit(Integer deposit) {
		this.deposit = deposit;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order100")
	public Set<Stock100> getStock100s() {
		return this.stock100s;
	}
	
	public void setStock100s(Set<Stock100> stock100s) {
		this.stock100s = stock100s;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "order100",cascade = {CascadeType.ALL})
	public Set<Order101> getOrder101s() {
		return this.order101s;
	}

	public void setOrder101s(Set<Order101> order101s) {
		this.order101s = order101s;
	}
	
	
	public void addOrderDetail(Order101 order101){
		order101s.add(order101);
		if(order101.getOrder100() != this){
			order101.setOrder100(this);
		}
	}
}
